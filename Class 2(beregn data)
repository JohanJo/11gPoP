let G = 67384e-11
let GMsol = 2.959122082322128e-4
let deltaT = 1.0
let Lon0=100.6001
let Lat0=0.0044
let Rad0=0.983295949009
let Lon1=101.6192
let Lat1=0.0044
let Rad1=0.983281670434
let deg2rad deg =
  deg * (System.Math.PI / 180.0)
let x0 = Rad0 * cos(deg2rad Lat0) * cos(deg2rad Lon0)
let y0 = Rad0 * cos(deg2rad Lat0) * sin(deg2rad Lon0)
let z0 = Rad0 * sin(deg2rad Lat0)

let x1 = Rad1 * cos(deg2rad Lat1) * cos(deg2rad Lon1)
let y1 = Rad1 * cos(deg2rad Lat1) * sin(deg2rad Lon1)
let z1 = Rad1 * sin(deg2rad Lat1)
                    //dens startaccerelation. her vil solen(GMsol) tr√¶kke lidt i jorden
let ax0 = - GMsol / (Rad0 * Rad0 * Rad0) * x0
let ay0 = - GMsol / (Rad0 * Rad0 * Rad0) * y0
let az0 = - GMsol / (Rad0 * Rad0 * Rad0) * z0
                    //hastigheden fundet ved at gange de to positioner
let vx0 = (x1 - x0) / (deltaT)
let vy0 = (y1 - y0) / (deltaT)
let vz0 = (z1 - z0) / (deltaT)
                    //start positionen
let rx0 = x0
let ry0 = y0
let rz0 = z0
                    //ny position fundet med vores hastighed + 1 dag
let rx1 = rx0 + vx0 * deltaT
let ry1 = ry0 + vy0 * deltaT
let rz1 = rz0 + vz0 * deltaT
                    //den nye hastighed
let vx1 = vx0 + ax0 * deltaT
let vy1 = vy0 + ay0 * deltaT
let vz1 = vz0 + az0 * deltaT
                    //den nye acceleration
let ax1 = - GMsol / (Rad1 * Rad1 * Rad1) * rx1
let ay1 = - GMsol / (Rad1 * Rad1 * Rad1) * ry1
let az1 = - GMsol / (Rad1 * Rad1 * Rad1) * rz1
printfn "rz1=%f" ry1
printfn "z1=%f" y1
let mutable rx = rx1 + vx1 * deltaT
let mutable ry = ry1 + vy1 * deltaT
let mutable rz = rz1 + vz1 * deltaT
let mutable rsim = sqrt(rx1*rx1+ry1*ry1+rz1*rz1)
let mutable ax = - GMsol / (rsim * rsim * rsim) * rx
let mutable ay = - GMsol / (rsim * rsim * rsim) * ry
let mutable az = - GMsol / (rsim * rsim * rsim) * rz
let mutable vx = vx1 + ax1 * deltaT
let mutable vy = vy1 + ay1 * deltaT
let mutable vz = vz1 + az1 * deltaT
;
for i in 1 .. 365 do
  printfn "%f" ry
  ax <- - GMsol / (rsim * rsim * rsim) * rx
  ay <- - GMsol / (rsim * rsim * rsim) * ry
  az <- - GMsol / (rsim * rsim * rsim) * rz
  vx <- vx + ax * deltaT
  vy <- vy + ay * deltaT
  vz <- vz + az * deltaT
  rx <- rx + vx * deltaT
  ry <- ry + vy * deltaT
  rz <- rz + vz * deltaT
  rsim <- sqrt(rx*rx+ry*ry+rz*rz)

